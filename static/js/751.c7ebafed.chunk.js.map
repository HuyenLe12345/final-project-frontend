{"version":3,"file":"static/js/751.c7ebafed.chunk.js","mappings":"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","sources":["Shared/handleChangeAndFetch.js","API/ProvinceAPI.jsx","API/AdminAPI.jsx","admin layout/Create Account/CreatePartnerAccount.js","FormGroup/FormGroup.js","Shared/Card.js"],"sourcesContent":["export const fetchProvinces = async (\n  fetchFunction,\n  defaultLabel,\n  updateFunction\n) => {\n  console.log(\"this is fetchProvinces\");\n\n  const response = await fetchFunction();\n  if (response.success === true) {\n    // Xử lý dữ liệu trả về\n\n    response.data.unshift({\n      id: String(Math.random()),\n      value: \"\",\n      label: defaultLabel,\n    });\n    updateFunction(response.data);\n  }\n};\nexport const fetchDistrictWard = async (\n  fetchFunction,\n  dataToSend,\n  defaultLabel,\n  updateFunction\n) => {\n  const response = await fetchFunction(dataToSend);\n  if (response.success === true) {\n    // Xử lý dữ liệu trả về\n    response.data.unshift({\n      id: String(Math.random()),\n      value: \"\",\n      label: defaultLabel,\n    });\n    updateFunction(response.data);\n  }\n};\nexport const handleChangeAndFetch = async (\n  e,\n  defaultLabel,\n  currentOption,\n  setCurrentOption,\n  fetchFunction,\n  dataToSend,\n  updateFunction\n) => {\n  const selectedValue = e.target.value;\n  if (selectedValue !== currentOption) {\n    setCurrentOption(selectedValue);\n    try {\n      fetchDistrictWard(\n        fetchFunction,\n        dataToSend,\n        defaultLabel,\n        updateFunction\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  }\n};\n","import axiosClient from \"./axiosClient\";\n\nconst ProvinceAPI = {\n  getProvinces: () => {\n    const url = \"/users/provinces\";\n    return axiosClient.get(url);\n  },\n  postDistricts: (body) => {\n    const url = \"/users/districts\";\n    return axiosClient.post(url, body);\n  },\n  postWards: (body) => {\n    const url = \"/users/wards\";\n    return axiosClient.post(url, body);\n  },\n};\nexport default ProvinceAPI;\n","import axiosClient from \"./axiosClient\";\n\nconst AdminAPI = {\n  // getUsers: (query) => {\n  //   const url = `/admin/get/user-information${query}`;\n  //   console.log(url);\n  //   return axiosClient.get(url);\n  // },\n  getUsersByType: (query) => {\n    const url = `/admin/get/user-information${query}`;\n    console.log(url);\n    return axiosClient.get(url);\n  },\n  getTotalUsers: () => {\n    const url = \"/admin/get/user-total\";\n    return axiosClient.get(url);\n  },\n  getPartners: (query) => {\n    const url = `/admin/get/partner-information${query}`;\n    return axiosClient.get(url);\n  },\n  getTotalPartners: () => {\n    const url = \"/admin/get/partner-total\";\n    return axiosClient.get(url);\n  },\n  getAdmins: (query) => {\n    const url = `/admin/get/admin-information${query}`;\n    return axiosClient.get(url);\n  },\n  deleteUser: (id) => {\n    const url = `/admin/delete/users/${id}`;\n    return axiosClient.delete(url);\n  },\n  getTotalAdmins: () => {\n    const url = \"/admin/get/admin-total\";\n    return axiosClient.get(url);\n  },\n  getTotalInfo: () => {\n    const url = \"/admin\";\n    return axiosClient.get(url);\n  },\n  createAccountAdmin: (body) => {\n    const url = \"/admin/create-account/admin\";\n    return axiosClient.post(url, body);\n  },\n  createAccountPartner: (body) => {\n    const url = \"/admin/create-account/partner\";\n    return axiosClient.post(url, body);\n  },\n  getTotalStats: () => {\n    const url = \"/admin/get/total-stats\";\n    return axiosClient.get(url);\n  },\n  getBackgrounds: () => {\n    const url = \"/admin/get/backgrounds\";\n    return axiosClient.get(url);\n  },\n  getPartnerLogos: () => {\n    const url = \"/admin/get/logos\";\n    return axiosClient.get(url);\n  },\n  getTenDonations: () => {\n    const url = \"/admin/get/recentDonations\";\n    return axiosClient.get(url);\n  },\n  getDonationByDate: (query) => {\n    const url = `/admin/get/donationByDate${query}`;\n    return axiosClient.get(url);\n  },\n};\n\nexport default AdminAPI;\n","import React, { useEffect, useState } from \"react\";\nimport ProvinceAPI from \"../../API/ProvinceAPI.jsx\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport FormGroup from \"../../FormGroup/FormGroup.js\";\nimport Card from \"../../Shared/Card.js\";\nimport {\n  handleChangeAndFetch,\n  fetchDistrictWard,\n  fetchProvinces,\n} from \"../../Shared/handleChangeAndFetch.js\";\nimport AdminAPI from \"../../API/AdminAPI.jsx\";\nimport \"../Project/Project Form/projectform.css\";\n\nconst CreatePartnerAccount = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [organizationName, setOrganizationName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false);\n  const [errorEmailDetail, setErrorEmailDetail] = useState(\"\"); // nội dung lỗi email nếu có\n  const [errorPasswordDetail, setErrorPasswordDetail] = useState(\"\"); // nội dung lỗi password\n  const [errorConfirmPasswordDetail, setErrorConfirmPasswordDetail] =\n    useState(\"\");\n  const [errorOrganizationName, setErrorOrganizationName] = useState(\"\");\n\n  const [provinces, setProvinces] = useState([\n    {\n      id: String(Math.random()),\n      value: \"\",\n      label: \"Tỉnh, Thành phố\",\n    },\n  ]);\n  const [chosenProvince, setChosenProvince] = useState(\"\");\n  const [districts, setDistricts] = useState([\n    {\n      id: String(Math.random()),\n      value: \"\",\n      label: \"Quận, Huyện\",\n    },\n  ]);\n  const [chosenDistrict, setChosenDistrict] = useState(\"\");\n  const [wards, setWards] = useState([\n    {\n      id: String(Math.random()),\n      value: \"\",\n      label: \"Xã, Phường\",\n    },\n  ]);\n  const [chosenWard, setChosenWard] = useState(\"\");\n  const [addressDetail, setAddressDetail] = useState(\"\");\n  const [website, setWebsite] = useState(\"\");\n  // xử lý  việc thay đổi province,city\n  const handleProvinceChange = (e) => {\n    handleChangeAndFetch(\n      e,\n      \"Quận, Huyện\",\n      chosenProvince,\n      setChosenProvince,\n      ProvinceAPI.postDistricts,\n      { value: e.target.value },\n      setDistricts\n    );\n    console.log(\"districts\", districts);\n  };\n  // xử lý việc thay đổi district\n  const handleDistrictChange = (e) => {\n    const districtData = {\n      provinceName: chosenProvince,\n      districtName: e.target.value,\n    };\n    handleChangeAndFetch(\n      e,\n      \"Phường, Xã\",\n      chosenDistrict,\n      setChosenDistrict,\n      ProvinceAPI.postWards,\n      districtData,\n      setWards\n    );\n  };\n  useEffect(() => {\n    async function fetchProvince() {\n      await fetchProvinces(\n        ProvinceAPI.getProvinces,\n        \"Tỉnh, Thành phố\",\n        setProvinces\n      );\n    }\n    fetchProvince();\n  }, []);\n  const createHandler = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const response = await AdminAPI.createAccountPartner(data);\n    console.log(\"This is response\", response.errors);\n\n    if (response && response.status === 400) {\n      const err = response.errors;\n      setErrorEmail(false);\n      setErrorPassword(false);\n      setErrorConfirmPassword(false);\n      setErrorEmailDetail(\"\");\n      setErrorPasswordDetail(\"\");\n      setErrorConfirmPasswordDetail(\"\");\n      setErrorOrganizationName(\"\");\n\n      for (let i = 0; i < err.length; i++) {\n        if (err[i].path === \"email\") {\n          setErrorEmail(true);\n          setErrorEmailDetail(err[i].msg);\n        }\n\n        if (err[i].path === \"password\") {\n          setErrorPassword(true);\n          setErrorPasswordDetail(err[i].msg);\n        }\n        if (err[i].path === \"confirm\") {\n          setErrorConfirmPassword(true);\n          setErrorConfirmPasswordDetail(err[i].msg);\n        }\n        if (err[i].path === \"organizationName\") {\n          setErrorOrganizationName(err[i].msg);\n        }\n      }\n      await fetchProvinces(\n        ProvinceAPI.getProvinces,\n        \"Tỉnh, Thành phố\",\n        setProvinces\n      );\n      if (chosenProvince) {\n        await fetchDistrictWard(\n          ProvinceAPI.postDistricts,\n          { value: chosenProvince },\n          \"Quận, Huyện\",\n          setDistricts\n        );\n        if (chosenDistrict) {\n          console.log(\"info.district\");\n          setChosenDistrict(chosenDistrict);\n          await fetchDistrictWard(\n            ProvinceAPI.postWards,\n            { provinceName: chosenProvince, districtName: chosenDistrict },\n            \"Phường, Xã\",\n            setWards\n          );\n        }\n      }\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    } else if (response && response.success === true) {\n      console.log(\"here\");\n      window.alert(\"Tạo tài khỏan thành công\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setErrorEmail(false);\n      setErrorPassword(false);\n      setErrorConfirmPassword(false);\n      setErrorEmailDetail(\"\");\n      setErrorPasswordDetail(\"\");\n      setErrorConfirmPasswordDetail(\"\");\n      setErrorOrganizationName(\"\");\n      setProvinces([\n        {\n          id: String(Math.random()),\n          value: \"\",\n          label: \"Tỉnh, Thành phố\",\n        },\n      ]);\n      setChosenProvince(\"\");\n      setDistricts([\n        {\n          id: String(Math.random()),\n          value: \"\",\n          label: \"Quận, Huyện\",\n        },\n      ]);\n      setChosenDistrict(\"\");\n      setWards([\n        {\n          id: String(Math.random()),\n          value: \"\",\n          label: \"Xã, Phường\",\n        },\n      ]);\n      setChosenWard(\"\");\n      setAddressDetail(\"\");\n      setWebsite(\"\");\n      setOrganizationName(\"\");\n      setPhone(\"\");\n    }\n  };\n\n  return (\n    <Card formName=\"layout-form\" formTitle=\"TẠO TÀI KHOẢN ĐỐI TÁC\">\n      <form\n        method=\"POST\"\n        onSubmit={createHandler}\n        encType=\"multipart/form-data\"\n      >\n        <div className=\"row\">\n          <div className=\"col-sm-6 pt-3 column-1\">\n            <FormGroup\n              label=\"Tên tổ chức\"\n              type=\"text\"\n              id=\"organizationName\"\n              name=\"organizationName\"\n              className=\"form-control\"\n              value={organizationName}\n              onChange={(e) => setOrganizationName(e.target.value)}\n              required\n            />\n            {errorOrganizationName && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorOrganizationName}\n              </p>\n            )}\n            <FormGroup\n              type=\"email\"\n              label=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            {errorEmail && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorEmailDetail}\n              </p>\n            )}\n            <FormGroup\n              type=\"password\"\n              label=\"Mật khẩu\"\n              id=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            {errorPassword && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorPasswordDetail}\n              </p>\n            )}\n            <FormGroup\n              type=\"password\"\n              label=\"Xác nhận mật khẩu\"\n              id=\"confirm\"\n              name=\"confirm\"\n              className=\"form-control\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n            {errorConfirmPassword && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorConfirmPasswordDetail}\n              </p>\n            )}\n            <FormGroup\n              label=\"Điện thoại\"\n              type=\"text\"\n              id=\"phone\"\n              name=\"phone\"\n              className=\"form-control\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              required\n            />{\" \"}\n          </div>\n          <div className=\"col-sm-6 pt-3 column-2\">\n            <h6 className=\"pb-2\">\n              Địa chỉ:<sup className=\"text-danger\">*</sup>\n            </h6>\n            <FormGroup\n              value={chosenProvince}\n              type=\"select\"\n              id=\"province\"\n              name=\"province\"\n              className=\"form-control\"\n              sharedName=\"provinces\"\n              onChange={handleProvinceChange}\n              options={provinces}\n              required\n            />\n            <FormGroup\n              value={chosenDistrict}\n              type=\"select\"\n              id=\"district\"\n              name=\"district\"\n              className=\"form-control\"\n              sharedName=\"provinces\"\n              onChange={handleDistrictChange}\n              options={districts}\n              required\n            />\n            <FormGroup\n              value={chosenWard}\n              type=\"select\"\n              id=\"ward\"\n              name=\"ward\"\n              className=\"form-control\"\n              sharedName=\"provinces\"\n              onChange={(e) => setChosenWard(e.target.value)}\n              options={wards}\n              required\n            />\n            <FormGroup\n              type=\"text\"\n              id=\"addressDetail\"\n              name=\"addressDetail\"\n              className=\"form-control\"\n              sharedName=\"provinces\"\n              value={addressDetail}\n              onChange={(e) => setAddressDetail(e.target.value)}\n              placeholder=\"Số nhà và tên đường\"\n              required\n            />\n            <FormGroup\n              type=\"text\"\n              label=\"Đường dẫn website của tổ chức:\"\n              id=\"website\"\n              name=\"website\"\n              value={website}\n              onChange={(e) => setWebsite(e.target.value)}\n              placeholder=\"Đường dẫn đến trang web của tổ chức\"\n              required\n            />\n\n            <FormGroup\n              label=\"Mã QR ngân hàng:\"\n              type=\"file\"\n              id=\"linkQR\"\n              name=\"linkQR\"\n              sharedName=\"line linkQR\"\n              required\n            />\n            <FormGroup\n              label=\"Hình đại diện:\"\n              type=\"file\"\n              id=\"avatar\"\n              name=\"avatar\"\n              sharedName=\"line\"\n              required\n            />\n            <FormGroup\n              label=\"Hình nền:\"\n              type=\"file\"\n              id=\"background\"\n              name=\"background\"\n              sharedName=\"line\"\n              required\n            />\n          </div>\n          <p>\n            <small>\n              <span>Lưu ý:</span> Mục (<span className=\"text-danger\">*</span>):\n              không được để trống.\n            </small>\n          </p>\n          <div className=\"container-button\">\n            <button type=\"submit\" className=\"btn btn-success text-center px-5\">\n              Tạo\n            </button>\n          </div>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default CreatePartnerAccount;\n","import React from \"react\";\nimport \"../admin layout/Project/Project Form/projectform.css\";\nimport \"./formgroup.css\";\n\nconst FormGroup = ({\n  label,\n  type,\n  id,\n  name,\n  required,\n  options,\n  className,\n  sharedName,\n  value,\n  disabled,\n  onChange,\n  rows,\n  multiple,\n  placeholder,\n  min,\n}) => {\n  console.log(required, name);\n  return (\n    <div className={`form-group ${sharedName}`}>\n      {label && type !== \"checkbox\" ? (\n        <label htmlFor={id}>\n          {label}\n          {required ? <sup className=\"text-danger\">*</sup> : \"\"}\n        </label>\n      ) : null}\n\n      {type === \"textarea\" ? (\n        <textarea\n          className={`form-control ${className}`}\n          id={id}\n          name={name}\n          rows={rows}\n          value={value}\n          onChange={onChange}\n          placeholder={placeholder}\n          required={required}\n        />\n      ) : type === \"select\" ? (\n        <select\n          id={id}\n          name={name}\n          required={required}\n          className={`form-control ${className}`}\n          value={value}\n          onChange={onChange}\n        >\n          {options.map((option, index) => (\n            <option\n              key={option.id ? option.id : option.value || index}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </select>\n      ) : type === \"file\" ? (\n        <input\n          type=\"file\"\n          id={id}\n          name={name}\n          multiple={multiple}\n          required={required}\n        />\n      ) : type === \"text\" ||\n        type === \"number\" ||\n        type === \"date\" ||\n        type === \"email\" ||\n        type === \"password\" ? (\n        <input\n          className={`form-control ${className}`}\n          type={type}\n          id={id}\n          name={name}\n          value={value}\n          onChange={onChange}\n          min={min}\n          disabled={disabled}\n          placeholder={placeholder}\n          required={required}\n        />\n      ) : type === \"checkbox\" ? (\n        <div className=\"checkbox-container\">\n          <input\n            type={type}\n            name={name}\n            id={id}\n            value={value}\n            disabled={disabled}\n          />\n          <label htmlFor={id}>\n            {label}\n            {required ? <sup className=\"text-danger\">*</sup> : \"\"}\n          </label>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default FormGroup;\n","import \"./card.css\";\nconst Card = ({ children, formName, formTitle, errorMessage }) => {\n  return (\n    <div className={`container-md  card ${formName}`}>\n      <h5>{formTitle}</h5>\n      {errorMessage && (\n        <p style={{ color: \"red\", fontSize: \"12px\" }}>*{errorMessage}</p>\n      )}\n      {children}\n    </div>\n  );\n};\nexport default Card;\n"],"names":["fetchProvinces","async","fetchFunction","defaultLabel","updateFunction","console","log","response","success","data","unshift","id","String","Math","random","value","label","fetchDistrictWard","dataToSend","handleChangeAndFetch","e","currentOption","setCurrentOption","selectedValue","target","error","getProvinces","axiosClient","get","postDistricts","body","post","postWards","getUsersByType","query","url","getTotalUsers","getPartners","getTotalPartners","getAdmins","deleteUser","delete","getTotalAdmins","getTotalInfo","createAccountAdmin","createAccountPartner","getTotalStats","getBackgrounds","getPartnerLogos","getTenDonations","getDonationByDate","CreatePartnerAccount","navigate","useNavigate","email","setEmail","useState","password","setPassword","organizationName","setOrganizationName","phone","setPhone","confirmPassword","setConfirmPassword","errorEmail","setErrorEmail","errorPassword","setErrorPassword","errorConfirmPassword","setErrorConfirmPassword","errorEmailDetail","setErrorEmailDetail","errorPasswordDetail","setErrorPasswordDetail","errorConfirmPasswordDetail","setErrorConfirmPasswordDetail","errorOrganizationName","setErrorOrganizationName","provinces","setProvinces","chosenProvince","setChosenProvince","districts","setDistricts","chosenDistrict","setChosenDistrict","wards","setWards","chosenWard","setChosenWard","addressDetail","setAddressDetail","website","setWebsite","useEffect","ProvinceAPI","fetchProvince","_jsx","Card","formName","formTitle","children","method","onSubmit","preventDefault","FormData","AdminAPI","errors","status","err","i","length","path","msg","provinceName","districtName","window","alert","state","encType","_jsxs","className","FormGroup","type","name","onChange","required","style","color","fontSize","sharedName","options","districtData","placeholder","_ref","disabled","rows","multiple","min","htmlFor","map","option","index","errorMessage"],"sourceRoot":""}