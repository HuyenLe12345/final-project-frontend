{"version":3,"file":"static/js/441.70cc8408.chunk.js","mappings":"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","sources":["Shared/handleChangeAndFetch.js","API/ProvinceAPI.jsx","ProfileForm/ProfileForm.jsx","FormGroup/FormGroup.js","Shared/Card.js"],"sourcesContent":["export const fetchProvinces = async (\n  fetchFunction,\n  defaultLabel,\n  updateFunction\n) => {\n  console.log(\"this is fetchProvinces\");\n\n  const response = await fetchFunction();\n  if (response.success === true) {\n    // Xử lý dữ liệu trả về\n\n    response.data.unshift({\n      id: String(Math.random()),\n      value: \"\",\n      label: defaultLabel,\n    });\n    updateFunction(response.data);\n  }\n};\nexport const fetchDistrictWard = async (\n  fetchFunction,\n  dataToSend,\n  defaultLabel,\n  updateFunction\n) => {\n  const response = await fetchFunction(dataToSend);\n  if (response.success === true) {\n    // Xử lý dữ liệu trả về\n    response.data.unshift({\n      id: String(Math.random()),\n      value: \"\",\n      label: defaultLabel,\n    });\n    updateFunction(response.data);\n  }\n};\nexport const handleChangeAndFetch = async (\n  e,\n  defaultLabel,\n  currentOption,\n  setCurrentOption,\n  fetchFunction,\n  dataToSend,\n  updateFunction\n) => {\n  const selectedValue = e.target.value;\n  if (selectedValue !== currentOption) {\n    setCurrentOption(selectedValue);\n    try {\n      fetchDistrictWard(\n        fetchFunction,\n        dataToSend,\n        defaultLabel,\n        updateFunction\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  }\n};\n","import axiosClient from \"./axiosClient\";\n\nconst ProvinceAPI = {\n  getProvinces: () => {\n    const url = \"/users/provinces\";\n    return axiosClient.get(url);\n  },\n  postDistricts: (body) => {\n    const url = \"/users/districts\";\n    return axiosClient.post(url, body);\n  },\n  postWards: (body) => {\n    const url = \"/users/wards\";\n    return axiosClient.post(url, body);\n  },\n};\nexport default ProvinceAPI;\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport ProvinceAPI from \"../API/ProvinceAPI.jsx\";\nimport UserAPI from \"../API/UserAPI.jsx\";\nimport FormGroup from \"../FormGroup/FormGroup.js\";\nimport Card from \"../Shared/Card.js\";\nimport {\n  handleChangeAndFetch,\n  fetchDistrictWard,\n  fetchProvinces,\n} from \"../Shared/handleChangeAndFetch.js\";\nimport \"../admin layout/Project/Project Form/projectform.css\";\n\nconst ProfileForm = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const profileId = location.state?.profileId;\n  console.log(\"profileForm\", location);\n  const idUser = useSelector((state) => state.user.idUser);\n\n  const role = useSelector((state) => state.user.role);\n\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [fullname, setFullname] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [organizationName, setOrganizationName] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [roleInProfile, setRoleInProfile] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [errorName, setErrorName] = useState(\"\");\n  const [provinces, setProvinces] = useState([\n    {\n      id: String(Math.random()),\n      value: \"\",\n      label: \"Tỉnh, Thành phố\",\n    },\n  ]);\n  const [chosenProvince, setChosenProvince] = useState(\"\");\n  const [districts, setDistricts] = useState([\n    {\n      id: String(Math.random()),\n      value: \"\",\n      label: \"Quận, Huyện\",\n    },\n  ]);\n  const [chosenDistrict, setChosenDistrict] = useState(\"\");\n  const [wards, setWards] = useState([\n    {\n      id: String(Math.random()),\n      value: \"\",\n      label: \"Xã, Phường\",\n    },\n  ]);\n  const [chosenWard, setChosenWard] = useState(\"\");\n  const [addressDetail, setAddressDetail] = useState(\"Số nhà và tên đường\");\n  const [websiteLink, setWebsiteLink] = useState(\"\");\n  const [linkQR, setLinkQR] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [background, setBackground] = useState(\"\");\n  // xử lý  việc thay đổi province,city\n  const handleProvinceChange = (e) => {\n    handleChangeAndFetch(\n      e,\n      \"Quận, Huyện\",\n      chosenProvince,\n      setChosenProvince,\n      ProvinceAPI.postDistricts,\n      { value: e.target.value },\n      setDistricts\n    );\n    console.log(\"districts\", districts);\n  };\n  // xử lý việc thay đổi district\n  const handleDistrictChange = (e) => {\n    const districtData = {\n      provinceName: chosenProvince,\n      districtName: e.target.value,\n    };\n    handleChangeAndFetch(\n      e,\n      \"Phường, Xã\",\n      chosenDistrict,\n      setChosenDistrict,\n      ProvinceAPI.postWards,\n      districtData,\n      setWards\n    );\n  };\n  useEffect(() => {\n    async function fetchProfile(id) {\n      const response = await UserAPI.getProfile(id);\n      if (response && response.data) {\n        const info = response.data;\n        console.log(info);\n        setErrorName(\"\");\n        setUsername(info.username || \"\");\n        setEmail(info.email || \"\");\n        setFullname(info.fullname || \"\");\n        setGender(info.gender || \"\");\n        setPhone(info.phone || \"\");\n        setSummary(info.summary || \"\");\n        setOrganizationName(info.organizationName || \"\");\n        setAddressDetail(info.addressDetail || \"\");\n        setWebsiteLink(info.website || \"\");\n        setRoleInProfile(info.role || \"\");\n        setStatus(info.status || \"\");\n        setLinkQR(info.linkQR || \"\");\n        setAvatar(info.avatar || \"\");\n        setBackground(info.background || \"\");\n        await fetchProvinces(\n          ProvinceAPI.getProvinces,\n          \"Tỉnh, Thành phố\",\n          setProvinces\n        );\n\n        if (info.province) {\n          console.log(\"info.province\");\n          setChosenProvince(info.province);\n          await fetchDistrictWard(\n            ProvinceAPI.postDistricts,\n            { value: info.province },\n            \"Quận, Huyện\",\n            setDistricts\n          );\n          if (info.district) {\n            console.log(\"info.district\");\n            setChosenDistrict(info.district);\n            await fetchDistrictWard(\n              ProvinceAPI.postWards,\n              { provinceName: info.province, districtName: info.district },\n              \"Phường, Xã\",\n              setWards\n            );\n            if (info.ward) {\n              setChosenWard(info.ward);\n            }\n          }\n        } else {\n          return;\n        }\n      } else if (\n        response &&\n        (response.status === 500 || response.status === 404)\n      ) {\n        navigate(\"/error-page\", {\n          state: { status: response.status, errors: response.errors },\n        });\n      }\n    }\n    if (idUser && profileId && idUser.toString() !== profileId.toString()) {\n      console.log(\"profileId\", profileId);\n      fetchProfile(profileId);\n    } else {\n      console.log(idUser, profileId);\n      fetchProfile(idUser);\n    }\n  }, []);\n  console.log(role, roleInProfile);\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setErrorName(\"\");\n    console.log(\"lấy đata\");\n    const data = new FormData(e.target);\n    const response = await UserAPI.postUpdatePersonalInfo(idUser, data);\n\n    if (response && response.success === true) {\n      window.alert(\"Bạn đã cập nhật thành công!\");\n    } else if (response && response.success === false) {\n      setErrorName(response.message);\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n  };\n  console.log(\n    role,\n    role !== \"admin 1\",\n    role !== \"admin 2\",\n    !avatar,\n    role && role !== \"amdin 1\" && role !== \"admin 2\" && !avatar\n  );\n  return (\n    <Card formName=\"layout-form\" formTitle=\"THÔNG TIN CÁ NHÂN\">\n      <form\n        method=\"POST\"\n        onSubmit={submitHandler}\n        encType=\"multipart/form-data\"\n      >\n        <div className=\"row\">\n          <div className=\"col-sm-6 pt-3 column-1\">\n            {roleInProfile !== \"partner\" && (\n              <>\n                <FormGroup\n                  label=\"Tên người dùng\"\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  className=\"form-control\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n                {errorName && (\n                  <p className=\"text-danger\">\n                    <small>{errorName}</small>\n                  </p>\n                )}\n              </>\n            )}\n            {roleInProfile === \"partner\" && (\n              <>\n                <FormGroup\n                  label=\"Tên tổ chức\"\n                  type=\"text\"\n                  id=\"organizationName\"\n                  name=\"organizationName\"\n                  className=\"form-control\"\n                  value={organizationName}\n                  onChange={(e) => setOrganizationName(e.target.value)}\n                  required\n                />\n                {errorName && (\n                  <p className=\"text-danger\">\n                    <small>{errorName}</small>\n                  </p>\n                )}\n              </>\n            )}\n            <FormGroup\n              label=\"Email\"\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              disabled={role === \"client\" || role === \"partner\"}\n              required\n            />\n            {(roleInProfile === \"client\" ||\n              roleInProfile === \"admin 2\" ||\n              roleInProfile === \"admin 1\") && (\n              <FormGroup\n                label=\"Họ và tên\"\n                type=\"text\"\n                id=\"fullname\"\n                name=\"fullname\"\n                className=\"form-control\"\n                value={fullname}\n                onChange={(e) => setFullname(e.target.value)}\n                required={role && role !== \"admin 1\" && role !== \"admin 2\"}\n              />\n            )}\n            <FormGroup\n              label=\"Điện thoại\"\n              type=\"text\"\n              id=\"phone\"\n              name=\"phone\"\n              className=\"form-control\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              required={role && role !== \"admin 1\" && role !== \"admin 2\"}\n            />{\" \"}\n            {roleInProfile === \"partner\" && (\n              <>\n                <FormGroup\n                  type=\"text\"\n                  label=\"Đường dẫn website của tổ chức:\"\n                  id=\"website\"\n                  name=\"website\"\n                  value={websiteLink}\n                  onChange={(e) => setWebsiteLink(e.target.value)}\n                  placeholder=\"Đường dẫn đến trang web của tổ chức\"\n                  required\n                />\n                <FormGroup\n                  value={summary}\n                  label=\"Tóm tắt về tổ chức\"\n                  type=\"textarea\"\n                  id=\"summary\"\n                  name=\"summary\"\n                  className=\"form-control\"\n                  rows=\"6\"\n                  onChange={(e) => setSummary(e.target.value)}\n                />\n              </>\n            )}\n          </div>\n          <div className=\"col-sm-6 pt-3 column-2\">\n            <h6 className=\"pb-2\">\n              Địa chỉ: <sup className=\"text-danger\">*</sup>\n            </h6>\n            <FormGroup\n              value={chosenProvince}\n              type=\"select\"\n              id=\"province\"\n              name=\"province\"\n              className=\"form-control\"\n              sharedName=\"provinces\"\n              onChange={handleProvinceChange}\n              options={provinces}\n              required={role && role !== \"admin 1\" && role !== \"admin 2\"}\n            />\n            <FormGroup\n              value={chosenDistrict}\n              type=\"select\"\n              id=\"district\"\n              name=\"district\"\n              className=\"form-control\"\n              sharedName=\"provinces\"\n              onChange={handleDistrictChange}\n              options={districts}\n              required={role && role !== \"admin 1\" && role !== \"admin 2\"}\n            />\n            <FormGroup\n              value={chosenWard}\n              type=\"select\"\n              id=\"ward\"\n              name=\"ward\"\n              className=\"form-control\"\n              sharedName=\"provinces\"\n              onChange={(e) => setChosenWard(e.target.value)}\n              options={wards}\n              required={role && role !== \"admin 1\" && role !== \"admin 2\"}\n            />\n            <FormGroup\n              type=\"text\"\n              id=\"addressDetail\"\n              name=\"addressDetail\"\n              className=\"form-control\"\n              sharedName=\"provinces\"\n              value={addressDetail}\n              onChange={(e) => setAddressDetail(e.target.value)}\n              placeholder=\"Số nhà và tên đường\"\n              required={role && role !== \"admin 1\" && role !== \"admin 2\"}\n            />\n            {(roleInProfile === \"admin 1\" ||\n              roleInProfile === \"admin 2\" ||\n              roleInProfile === \"client\") && (\n              <FormGroup\n                value={gender}\n                label=\"Giới tính\"\n                type=\"select\"\n                id=\"gender\"\n                name=\"gender\"\n                className=\"form-control\"\n                sharedName=\"category gender\"\n                onChange={(e) => setGender(e.target.value)}\n                options={[\n                  { value: \"\", label: \"Chọn\" },\n                  { value: \"Female\", label: \"Nữ\" },\n                  { value: \"Male\", label: \"Nam\" },\n                  { value: \"Other\", label: \"Khác\" },\n                ]}\n              />\n            )}\n\n            {(role === \"admin 1\" || role === \"admin 2\") &&\n              roleInProfile === \"partner\" && (\n                <>\n                  <FormGroup\n                    label=\"Mã QR ngân hàng:\"\n                    type=\"file\"\n                    id=\"linkQR\"\n                    name=\"linkQR\"\n                    sharedName=\"line linkQR\"\n                    required={!linkQR}\n                  />\n                </>\n              )}\n            <FormGroup\n              label=\"Hình đại diện:\"\n              type=\"file\"\n              id=\"avatar\"\n              name=\"avatar\"\n              sharedName=\"line\"\n              required={\n                role && role !== \"admin 1\" && role !== \"admin 2\" && !avatar\n              }\n            />\n            <FormGroup\n              label=\"Hình nền:\"\n              type=\"file\"\n              id=\"background\"\n              name=\"background\"\n              sharedName=\"line\"\n              required={\n                role && role !== \"admin 1\" && role !== \"admin 2\" && !background\n              }\n            />\n            {(role === \"admin 1\" || role === \"admin 2\") && (\n              <FormGroup\n                value={status}\n                label=\"Trạng thái\"\n                type=\"select\"\n                id=\"status\"\n                name=\"status\"\n                className=\"form-control\"\n                sharedName=\"category status\"\n                onChange={(e) => setStatus(e.target.value)}\n                options={[\n                  { value: \"hoạt động\", label: \"Hoạt động\" },\n                  { value: \"dừng hoạt động\", label: \"Dừng hoạt động\" },\n                ]}\n              />\n            )}\n            <input\n              type=\"hidden\"\n              name=\"userId\"\n              value={\n                profileId && profileId.toString() !== idUser.toString()\n                  ? profileId\n                  : idUser\n              }\n            />\n          </div>\n          <p>\n            <small>\n              <span>Lưu ý:</span> Mục (<span className=\"text-danger\">*</span>\n              ): không được để trống.\n            </small>\n          </p>\n          <div className=\"container-button\">\n            <button type=\"submit\" className=\"btn btn-success text-center\">\n              Cập nhật\n            </button>\n          </div>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default ProfileForm;\n","import React from \"react\";\nimport \"../admin layout/Project/Project Form/projectform.css\";\nimport \"./formgroup.css\";\n\nconst FormGroup = ({\n  label,\n  type,\n  id,\n  name,\n  required,\n  options,\n  className,\n  sharedName,\n  value,\n  disabled,\n  onChange,\n  rows,\n  multiple,\n  placeholder,\n  min,\n}) => {\n  console.log(required, name);\n  return (\n    <div className={`form-group ${sharedName}`}>\n      {label && type !== \"checkbox\" ? (\n        <label htmlFor={id}>\n          {label}\n          {required ? <sup className=\"text-danger\">*</sup> : \"\"}\n        </label>\n      ) : null}\n\n      {type === \"textarea\" ? (\n        <textarea\n          className={`form-control ${className}`}\n          id={id}\n          name={name}\n          rows={rows}\n          value={value}\n          onChange={onChange}\n          placeholder={placeholder}\n          required={required}\n        />\n      ) : type === \"select\" ? (\n        <select\n          id={id}\n          name={name}\n          required={required}\n          className={`form-control ${className}`}\n          value={value}\n          onChange={onChange}\n        >\n          {options.map((option, index) => (\n            <option\n              key={option.id ? option.id : option.value || index}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </select>\n      ) : type === \"file\" ? (\n        <input\n          type=\"file\"\n          id={id}\n          name={name}\n          multiple={multiple}\n          required={required}\n        />\n      ) : type === \"text\" ||\n        type === \"number\" ||\n        type === \"date\" ||\n        type === \"email\" ||\n        type === \"password\" ? (\n        <input\n          className={`form-control ${className}`}\n          type={type}\n          id={id}\n          name={name}\n          value={value}\n          onChange={onChange}\n          min={min}\n          disabled={disabled}\n          placeholder={placeholder}\n          required={required}\n        />\n      ) : type === \"checkbox\" ? (\n        <div className=\"checkbox-container\">\n          <input\n            type={type}\n            name={name}\n            id={id}\n            value={value}\n            disabled={disabled}\n          />\n          <label htmlFor={id}>\n            {label}\n            {required ? <sup className=\"text-danger\">*</sup> : \"\"}\n          </label>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default FormGroup;\n","import \"./card.css\";\nconst Card = ({ children, formName, formTitle, errorMessage }) => {\n  return (\n    <div className={`container-md  card ${formName}`}>\n      <h5>{formTitle}</h5>\n      {errorMessage && (\n        <p style={{ color: \"red\", fontSize: \"12px\" }}>*{errorMessage}</p>\n      )}\n      {children}\n    </div>\n  );\n};\nexport default Card;\n"],"names":["fetchProvinces","async","fetchFunction","defaultLabel","updateFunction","console","log","response","success","data","unshift","id","String","Math","random","value","label","fetchDistrictWard","dataToSend","handleChangeAndFetch","e","currentOption","setCurrentOption","selectedValue","target","error","getProvinces","axiosClient","get","postDistricts","body","post","postWards","ProfileForm","_location$state","navigate","useNavigate","location","useLocation","profileId","state","idUser","useSelector","user","role","email","setEmail","useState","username","setUsername","fullname","setFullname","gender","setGender","phone","setPhone","organizationName","setOrganizationName","summary","setSummary","roleInProfile","setRoleInProfile","status","setStatus","errorName","setErrorName","provinces","setProvinces","chosenProvince","setChosenProvince","districts","setDistricts","chosenDistrict","setChosenDistrict","wards","setWards","chosenWard","setChosenWard","addressDetail","setAddressDetail","websiteLink","setWebsiteLink","linkQR","setLinkQR","avatar","setAvatar","background","setBackground","useEffect","fetchProfile","UserAPI","getProfile","info","website","ProvinceAPI","province","district","provinceName","districtName","ward","errors","toString","_jsx","Card","formName","formTitle","children","method","onSubmit","preventDefault","FormData","postUpdatePersonalInfo","window","alert","message","encType","_jsxs","className","_Fragment","FormGroup","type","name","onChange","required","disabled","placeholder","rows","sharedName","options","districtData","_ref","multiple","min","htmlFor","map","option","index","errorMessage","style","color","fontSize"],"sourceRoot":""}