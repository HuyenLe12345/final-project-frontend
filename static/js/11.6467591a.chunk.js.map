{"version":3,"file":"static/js/11.6467591a.chunk.js","mappings":"6KAKA,MA6FA,EA7FsBA,KACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC7B,MAAEO,IAAUC,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,QAGP,CAACJ,IAwCJ,OAJAI,EAAAA,EAAAA,YAAU,KACRC,SAASC,MAAQ,mDAA+B,GAC/C,KAGDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,MAAA,QAAMC,SAzCSC,UACnBC,EAAEC,iBACFf,EAAS,IACTF,EAAW,IAEX,GADsB,oBACHkB,KAAKxB,GAIxB,GAAIA,IAAaG,EAKjB,IACE,MAAMsB,QAAiBC,EAAAA,EAAQC,kBAAkBlB,EAAO,CAAET,aACtDyB,IAAiC,IAArBA,EAASG,SACvBC,QAAQC,IAAI,cACZxB,EAAWmB,EAASpB,SAEpBM,EAAS,aACAc,GAAgC,MAApBA,EAASM,QAC9BF,QAAQC,IAAI,OACZD,QAAQC,IAAIL,GACZjB,EAASiB,EAASO,SACTP,GAAgC,MAApBA,EAASM,QAC9BpB,EAAS,cAAe,CACtBsB,MAAO,CAAEF,OAAQN,EAASM,OAAQC,OAAQP,EAASO,SAGzD,CAAE,MAAOE,GAAM,IAADC,EACZ3B,GAAiB,QAAR2B,EAAAD,EAAIE,YAAI,IAAAD,OAAA,EAARA,EAAU9B,UAAW,6DAChC,MAtBEG,EAAS,yFAJTA,EAAS,kGA0BX,EASiCU,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8CACHX,IAASS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAAEX,IAC9CF,IAAWW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAAEb,KAClDc,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,iCACPF,EAAAA,EAAAA,KAAA,SACEqB,KAAK,WACLC,KAAK,WACLrB,UAAU,eACVsB,YAAY,wCACZC,MAAOxC,EACPyC,SAAWnB,GAAMrB,EAAYqB,EAAEoB,OAAOF,OACtCG,UAAQ,QAGZxB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,yCACPF,EAAAA,EAAAA,KAAA,SACEsB,KAAK,UACLD,KAAK,WACLpB,UAAU,eACVsB,YAAY,+CACZC,MAAOrC,EACPsC,SAAWnB,GAAMlB,EAAmBkB,EAAEoB,OAAOF,OAC7CG,UAAQ,QAGZ3B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBF,EAAAA,EAAAA,KAAA,UAAQqB,KAAK,SAASpB,UAAU,kBAAiBC,SAAC,sDAMpD,C","sources":["components/ResetPassword.js"],"sourcesContent":["// ResetPassword.js\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\n\nconst ResetPassword = () => {\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const { token } = useParams(); // Get token from URL\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Optionally, you can validate the token here by sending a request to the backend\n    // to check if the token is valid and not expired.  If not valid, redirect to an error page.\n  }, [token]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setMessage(\"\");\n    const passwordRegex = /^[a-zA-Z0-9]{8,}$/;\n    if (!passwordRegex.test(password)) {\n      setError(\"Mật khẩu phải chứa ít nhất 8 ký tự và/hoặc số.\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError(\"Mật khẩu và xác nhận mật khẩu không khớp.\");\n      return;\n    }\n\n    try {\n      const response = await UserAPI.postResetPassword(token, { password }); //Create postResetPassword in API\n      if (response && response.success === true) {\n        console.log(\"status 200\");\n        setMessage(response.message);\n        // Redirect the user to the sign-in page\n        navigate(\"/sign-in\");\n      } else if (response && response.status === 400) {\n        console.log(\"400\");\n        console.log(response);\n        setError(response.errors);\n      } else if (response && response.status === 500) {\n        navigate(\"/error-page\", {\n          state: { status: response.status, errors: response.errors },\n        });\n      }\n    } catch (err) {\n      setError(err.data?.message || \"Có lỗi xảy ra. Vui lòng thử lại.\");\n    }\n  };\n  useEffect(() => {\n    document.title = \"Thiết lập mật khẩu | Donation\";\n  }, []);\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\">\n        <form onSubmit={handleSubmit}>\n          <h3>Đặt lại mật khẩu</h3>\n          {error && <div className=\"alert alert-danger\">{error}</div>}\n          {message && <div className=\"alert alert-success\">{message}</div>}\n          <div className=\"mb-3\">\n            <label>Mật khẩu mới</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              placeholder=\"Nhập mật khẩu mới\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label>Xác nhận mật khẩu</label>\n            <input\n              name=\"confirm\"\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Xác nhận mật khẩu mới\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"d-grid\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Đặt lại mật khẩu\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"names":["ResetPassword","password","setPassword","useState","confirmPassword","setConfirmPassword","message","setMessage","error","setError","token","useParams","navigate","useNavigate","useEffect","document","title","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","test","response","UserAPI","postResetPassword","success","console","log","status","errors","state","err","_err$data","data","type","name","placeholder","value","onChange","target","required"],"sourceRoot":""}