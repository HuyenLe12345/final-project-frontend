{"version":3,"file":"static/js/177.a3219954.chunk.js","mappings":"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","sources":["API/PostAPI.jsx","../node_modules/react-bootstrap/esm/Image.js","Posts/PostDetail.js"],"sourcesContent":["import axiosClient from \"./axiosClient\";\n\nconst PostAPI = {\n  createPost: (body) => {\n    const url = \"/posts/create-post\";\n    return axiosClient.post(url, body);\n  },\n  getPostDetail: (id) => {\n    const url = `/posts/${id}`;\n    return axiosClient.get(url);\n  },\n  toggleLike: (postId) => {\n    const url = `/posts/${postId}/toggle-like`;\n    return axiosClient.post(url);\n  },\n  getAllPosts: () => {\n    const url = \"/posts\";\n    return axiosClient.get(url);\n  },\n  updatePost: (id, body) => {\n    const url = `/posts/${id}/update`;\n    return axiosClient.post(url, body);\n  },\n  deletePost: (id) => {\n    console.log(id);\n    const url = `/posts/${id}/delete`;\n    return axiosClient.delete(url);\n  },\n};\n\nexport default PostAPI;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid = false,\n  rounded = false,\n  roundedCircle = false,\n  thumbnail = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nexport default Image;","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Image, Modal } from \"react-bootstrap\";\nimport Card from \"../Shared/Card\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport PostAPI from \"../API/PostAPI\";\nimport UserIcon from \"../Shared/UserIcon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\nimport CommentBox from \"../admin layout/Project/ProjectDetail/CommentBox\";\nimport convertToSlug from \"../Shared/convertToSlug\";\nimport \"./postform.css\";\nfunction PostDetail() {\n  const navigate = useNavigate();\n  const { contentId } = useParams();\n  const userId = useSelector((state) => state.user.idUser);\n  const [showModal, setShowModal] = useState(false);\n  const [post, setPost] = useState(null);\n  const [recentPosts, setRecentPosts] = useState([]);\n  const [currentImage, setCurrentImage] = useState(0);\n  const [favorites, setFavorites] = useState([]);\n  // hàm lấy thông tin chi tiết của một bài viết\n  async function fetchPostDetail(id) {\n    const response = await PostAPI.getPostDetail(id);\n    if (response && response.success === true) {\n      console.log(\"post\", response.post);\n      setPost(response.post);\n      setRecentPosts(response.recentPosts);\n      setFavorites(response.post.favorites);\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n  }\n  const handleImageClick = (index) => {\n    setCurrentImage(index);\n    setShowModal(true);\n  };\n  useEffect(() => {\n    if (contentId) {\n      console.log(contentId);\n      fetchPostDetail(contentId);\n    }\n  }, [contentId]);\n  async function toggleLike() {\n    console.log(\"click like\");\n    // Tạo bản sao của mảng favorites hiện tại\n    const newFavorites = [...favorites];\n\n    // Kiểm tra xem user đã like chưa\n    const userIndex = newFavorites.indexOf(userId);\n\n    // Thực hiện thay đổi trên local state trước\n    if (userIndex === -1) {\n      newFavorites.push(userId); // Thêm userId nếu chưa like\n    } else {\n      newFavorites.splice(userIndex, 1); // Xóa userId nếu đã like\n    }\n    setFavorites(newFavorites);\n\n    // Gọi API cập nhật lên server\n    const response = await PostAPI.toggleLike(contentId);\n\n    if (response && (response.status === 500 || response.status === 404)) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n  }\n  const [pageTitle, setPageTitle] = useState(\"Donation\");\n\n  useEffect(() => {\n    document.title = pageTitle;\n  }, [pageTitle]);\n\n  const handleLinkClick = (newTitle) => {\n    setPageTitle(newTitle);\n  };\n  return (\n    <Card formName=\"post-page-detail\">\n      <Container style={{ marginTop: \"50px\" }}>\n        <Row>\n          <Col md={8}>\n            {/* Nội dung bài viết */}\n            <div className=\" mb-0\" style={{ textAlign: \"left\" }}>\n              <div\n                style={{\n                  display: \"inline-block\",\n                  width: \"30px\",\n                  height: \"30px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                <UserIcon\n                  avatar={post && post.authorId.avatar}\n                  username={\n                    post?.authorId?.role === \"partner\"\n                      ? post?.authorId?.organizationName\n                      : post?.authorId?.username\n                  }\n                  href=\"#\"\n                />\n              </div>\n              <div\n                style={{\n                  display: \"inline-block\",\n                  textAlign: \"left\",\n                  fontSize: \"20px\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                <Link\n                  to={`${\n                    userId.toString() === post?.authorId?._id.toString()\n                      ? \"/personal-page\"\n                      : post?.authorId?.role === \"partner\"\n                      ? `/quy/${convertToSlug(\n                          post?.authorId?.organizationName\n                        )}`\n                      : `/taikhoan/${post?.authorId?.username}`\n                  }`}\n                  state={{ personalPageId: post?.authorId?._id }}\n                  style={{ textDecoration: \"none\" }}\n                >\n                  {\" \"}\n                  {post?.authorId?.role === \"partner\"\n                    ? post?.authorId?.organizationName\n                    : post?.authorId?.username}\n                </Link>\n              </div>\n            </div>\n            <div\n              className=\"post-date small\"\n              style={{\n                textAlign: \"left\",\n                marginLeft: \"40px\",\n                color: \"gray\",\n              }}\n            >\n              {post && new Date(post.createdAt).toLocaleString()}\n            </div>\n            <h5\n              className=\"post-title\"\n              style={{\n                textAlign: \"center\",\n                marginLeft: \"60px\",\n                marginTop: \"20px\",\n              }}\n            >\n              {post && post.title}\n            </h5>\n            <div\n              className=\"post-content\"\n              style={{\n                textAlign: \"justify\",\n                marginLeft: \"50px\",\n                marginRight: \"50px\",\n              }}\n            >\n              {post &&\n                post.content\n                  .split(\"\\n\")\n                  .map((con, index) => <p key={index}> {con}</p>)}\n            </div>\n            <div className=\"post-media\">\n              {post &&\n                post.images.map((image, index) => (\n                  <Image\n                    key={index}\n                    src={`http://localhost:8080/${image}`}\n                    onClick={() => handleImageClick(index)}\n                    fluid\n                    style={{ width: \"45%\", margin: \"5px\" }}\n                  />\n                ))}\n            </div>\n            {userId && (\n              <div\n                className=\"like-button mt-5\"\n                style={{ textAlign: \"left\", marginLeft: \"50px\" }}\n              >\n                <button\n                  type=\"button\"\n                  className=\"btn btn-default btn-xs me-1\"\n                  onClick={toggleLike}\n                >\n                  <FontAwesomeIcon\n                    icon={faThumbsUp}\n                    className={`me-2 ${\n                      favorites.includes(userId) ? \"text-primary\" : \"\"\n                    }`}\n                  />\n                  Like{\" \"}\n                  <span className=\"pull-right text-muted ms-2\">\n                    {favorites.length} like{favorites.length > 1 ? \"s\" : \"\"}\n                  </span>\n                </button>\n              </div>\n            )}\n          </Col>\n          <Col\n            md={4}\n            className=\"bg-success align-self-start rounded mt-5\"\n            style={{ textAlign: \"left\", height: \"auto\" }}\n          >\n            <h5\n              style={{ textAlign: \"center\", marginTop: \"10px\", color: \"white\" }}\n            >\n              Bài viết gần đây\n            </h5>\n            {/* Bài viết gần đây */}\n            {recentPosts && recentPosts.length === 0 && (\n              <p className=\"text-center\">Không có bài viết.</p>\n            )}\n            {recentPosts &&\n              recentPosts.length > 0 &&\n              recentPosts.map((post, index) => (\n                <div className=\"row align-items-center each-post mx-1 \">\n                  <div key={post._id} className=\"recent-post px-0 col-sm-3\">\n                    <Image\n                      src={`http://localhost:8080/${post.images[0]}`}\n                      fluid\n                    />\n                  </div>\n\n                  <div className=\"col-sm-9\">\n                    <h6 className=\"text-success\">\n                      <Link\n                        onClick={() =>\n                          handleLinkClick(post.title || \"Donation\")\n                        }\n                        to={`/posts/${post._id}`}\n                        style={{ textDecoration: \"none\" }}\n                      >\n                        {post.title}\n                      </Link>\n                    </h6>\n                    <p style={{ fontSize: \"13px\" }}>\n                      Tác giả:{\" \"}\n                      {post?.authorId?.role === \"partner\"\n                        ? post?.authorId?.organizationName\n                        : post?.authorId?.username}\n                    </p>\n                  </div>\n                </div>\n              ))}\n          </Col>\n        </Row>\n        {userId && (\n          <Row>\n            <Col md={8} xs={12}>\n              <CommentBox type=\"post\" />\n            </Col>\n          </Row>\n        )}\n        {/* Modal xem ảnh phóng to */}\n        <Modal show={showModal} onHide={() => setShowModal(false)}>\n          <Modal.Body>\n            {post && (\n              <>\n                <Image\n                  src={`http://localhost:8080/${post.images[currentImage]}`}\n                  fluid\n                />\n                <div className=\"modal-controls text-center mt-3\">\n                  <button\n                    className=\"btn btn-success me-3\"\n                    onClick={() =>\n                      setCurrentImage(\n                        (prev) =>\n                          (prev - 1 + post.images.length) % post.images.length\n                      )\n                    }\n                  >\n                    Trước\n                  </button>\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={() =>\n                      setCurrentImage((prev) => (prev + 1) % post.images.length)\n                    }\n                  >\n                    Sau\n                  </button>\n                </div>\n              </>\n            )}\n          </Modal.Body>\n        </Modal>\n      </Container>\n    </Card>\n  );\n}\n\nexport default PostDetail;\n"],"names":["createPost","body","axiosClient","post","getPostDetail","id","url","get","toggleLike","postId","getAllPosts","updatePost","deletePost","console","log","delete","PropTypes","Image","React","_ref","ref","bsPrefix","className","fluid","rounded","roundedCircle","thumbnail","props","useBootstrapPrefix","_jsx","classNames","displayName","_post$authorId","_post$authorId2","_post$authorId3","_post$authorId4","_post$authorId5","_post$authorId6","_post$authorId7","_post$authorId8","_post$authorId9","_post$authorId10","_post$authorId11","navigate","useNavigate","contentId","useParams","userId","useSelector","state","user","idUser","showModal","setShowModal","useState","setPost","recentPosts","setRecentPosts","currentImage","setCurrentImage","favorites","setFavorites","useEffect","async","response","PostAPI","success","status","errors","fetchPostDetail","pageTitle","setPageTitle","document","title","Card","formName","children","_jsxs","Container","style","marginTop","Row","Col","md","textAlign","display","width","height","marginRight","UserIcon","avatar","authorId","username","role","organizationName","href","fontSize","fontWeight","Link","to","toString","_id","convertToSlug","personalPageId","textDecoration","marginLeft","color","Date","createdAt","toLocaleString","content","split","map","con","index","images","image","src","onClick","handleImageClick","margin","type","newFavorites","userIndex","indexOf","push","splice","FontAwesomeIcon","icon","faThumbsUp","includes","length","_post$authorId12","_post$authorId13","_post$authorId14","handleLinkClick","newTitle","xs","CommentBox","Modal","show","onHide","Body","_Fragment","prev"],"sourceRoot":""}