{"version":3,"file":"static/js/817.2c339544.chunk.js","mappings":"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","sources":["components/signup.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI.jsx\";\nconst SignUp = () => {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [errorUsername, setErrorUsername] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false);\n  const [errorEmailDetail, setErrorEmailDetail] = useState(\"\"); // nội dung lỗi email nếu có\n  const [errorUsernameDetail, setErrorUsernameDetail] = useState(\"\"); //nội dung lỗi username nếu có\n  const [errorPasswordDetail, setErrorPasswordDetail] = useState(\"\"); // nội dung lỗi password\n  const [errorConfirmPasswordDetail, setErrorConfirmPasswordDetail] =\n    useState(\"\");\n\n  const [message, setMessage] = useState(\"\");\n  console.log(\"message\");\n  const onChangeUsername = (e) => {\n    setUsername(e.target.value);\n    setErrorUsername(false);\n    setErrorUsernameDetail(\"\");\n  };\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n    setErrorEmail(false);\n    setErrorEmailDetail(\"\");\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n    setErrorPassword(false);\n    setErrorPasswordDetail(\"\");\n  };\n  const onChangeConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n    setErrorConfirmPassword(false);\n    setErrorConfirmPasswordDetail(\"\");\n  };\n  console.log(\"chuan bi submit\");\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    const data = new FormData(e.target);\n    const response = await UserAPI.postSignUp(data);\n    console.log(\"This is response\", response);\n\n    if (response && response.status === 400) {\n      const err = response.errors;\n      setErrorEmail(false);\n      setErrorUsername(false);\n      setErrorPassword(false);\n      setErrorConfirmPassword(false);\n      setErrorEmailDetail(\"\");\n      setErrorUsernameDetail(\"\");\n      setErrorPasswordDetail(\"\");\n      setErrorConfirmPasswordDetail(\"\");\n\n      for (let i = 0; i < err.length; i++) {\n        if (err[i].path === \"email\") {\n          setErrorEmail(true);\n          setErrorEmailDetail(err[i].msg);\n        }\n        if (err[i].path === \"username\") {\n          setErrorUsername(true);\n          setErrorUsernameDetail(err[i].msg);\n        }\n        if (err[i].path === \"password\") {\n          setErrorPassword(true);\n          setErrorPasswordDetail(err[i].msg);\n        }\n        if (err[i].path === \"confirm\") {\n          setErrorConfirmPassword(true);\n          setErrorConfirmPasswordDetail(err[i].msg);\n        }\n      }\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      // Chuyển hướng đến trang lỗi\n      navigate(\"/error-page\", {\n        state: { status: response.status, message: response.errors },\n      });\n    } else {\n      console.log(\"here\");\n      setMessage(response.message);\n    }\n  };\n  useEffect(() => {\n    document.title = \"Đăng ký | Donation\";\n  }, []);\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\">\n        <form method=\"POST\" onSubmit={submitHandler}>\n          <h3>Đăng ký</h3>\n          {message && <div className=\"alert alert-success\">{message}</div>}\n          <div className=\"mb-3\">\n            <label>\n              Tên sử dụng <sup className=\"text-danger\">*</sup>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              placeholder=\"Nhập tên người dùng (username)\"\n              value={username}\n              onChange={onChangeUsername}\n              required\n            />\n            {errorUsername && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorUsernameDetail}\n              </p>\n            )}\n          </div>\n\n          <div className=\"mb-3\">\n            <label>\n              Email <sup className=\"text-danger\">*</sup>\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              name=\"email\"\n              placeholder=\"Nhập email\"\n              value={email}\n              onChange={onChangeEmail}\n              required\n            />\n            {errorEmail && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorEmailDetail}\n              </p>\n            )}\n          </div>\n          <div className=\"mb-3\">\n            <label>\n              Mật khẩu <sup className=\"text-danger\">*</sup>\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              onChange={onChangePassword}\n              value={password}\n              placeholder=\"Nhập mật khẩu\"\n              required\n            />\n            {errorPassword && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorPasswordDetail}\n              </p>\n            )}\n          </div>\n          <div className=\"mb-3\">\n            <label>\n              Xác nhận lại mật khẩu <sup className=\"text-danger\">*</sup>\n            </label>\n            <input\n              type=\"password\"\n              name=\"confirm\"\n              className=\"form-control\"\n              onChange={onChangeConfirmPassword}\n              value={confirmPassword}\n              placeholder=\"Nhập lại mật khẩu\"\n              required\n            />\n            {errorConfirmPassword && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorConfirmPasswordDetail}\n              </p>\n            )}\n          </div>\n          <div className=\"d-grid\">\n            <button type=\"submit\" className=\"btn btn-success\">\n              Đăng ký\n            </button>\n          </div>\n          <p className=\"forgot-password text-right\">\n            Bạn đã có tài khoản?<a href=\"/sign-in\">Hãy đăng nhập!</a>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default SignUp;\n"],"names":["SignUp","navigate","useNavigate","username","setUsername","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorEmail","setErrorEmail","errorUsername","setErrorUsername","errorPassword","setErrorPassword","errorConfirmPassword","setErrorConfirmPassword","errorEmailDetail","setErrorEmailDetail","errorUsernameDetail","setErrorUsernameDetail","errorPasswordDetail","setErrorPasswordDetail","errorConfirmPasswordDetail","setErrorConfirmPasswordDetail","message","setMessage","console","log","useEffect","document","title","_jsx","className","children","_jsxs","method","onSubmit","async","e","preventDefault","data","FormData","target","response","UserAPI","postSignUp","status","err","errors","i","length","path","msg","state","type","name","placeholder","value","onChange","required","style","color","fontSize","href"],"sourceRoot":""}