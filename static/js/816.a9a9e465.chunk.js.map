{"version":3,"file":"static/js/816.a9a9e465.chunk.js","mappings":"uVAkBA,MA2aA,EA3a2BA,KACzB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,YAClCC,GAAiBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKC,SACnDC,GAAOJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKE,OACzCC,GAAWC,EAAAA,EAAAA,OAEVC,EAAaC,IAAkBV,EAAAA,EAAAA,WAAS,IACxCW,EAAQC,IAAaZ,EAAAA,EAAAA,UAAS,KAC9Ba,EAAaC,IAAkBd,EAAAA,EAAAA,UAAS,KACxCe,EAAQC,IAAahB,EAAAA,EAAAA,UAAS,KAC9BiB,EAAYC,IAAiBlB,EAAAA,EAAAA,UAAS,KACtCmB,EAAeC,IAAoBpB,EAAAA,EAAAA,UAAS,KAC5CqB,EAAgBC,IAAqBtB,EAAAA,EAAAA,UAAS,KAC9CuB,EAAaC,IAAkBxB,EAAAA,EAAAA,UAAS,KACxCyB,EAAgBC,IAAqB1B,EAAAA,EAAAA,UAAS,KAC9C2B,EAAqBC,IAA0B5B,EAAAA,EAAAA,UAAS,KACxD6B,EAAkBC,IAAuB9B,EAAAA,EAAAA,UAAS,KAClD+B,EAAYC,IAAiBhC,EAAAA,EAAAA,UAClCM,GAAiB,YAATA,EACJ,CACE2B,KAAM,EACNC,MAAO,GACPC,aAAc,GACdZ,YAAa,GACbN,WAAY,GACZE,cAAe,GACfE,eAAgB,IAElB,CACEY,KAAM,EACNC,MAAO,GACPC,aAAc,GACdZ,YAAa,GACbN,WAAY,GACZE,cAAe,GACfE,eAAgB,GAChBe,aAAc,MAIfC,EAAWC,IAAgBtC,EAAAA,EAAAA,UAAS,IACpCuC,EAAYC,IAAiBxC,EAAAA,EAAAA,UAAS,OACtCyC,EAAYC,IAAiB1C,EAAAA,EAAAA,UAAS,MAG7C2C,eAAeC,KACb,IAAIC,EACAC,EACJ,GAAa,YAATxC,EAAoB,CAEtB,MAAMyC,EAAS,CACbd,KAAMF,EAAWE,KACjBC,MAAOH,EAAWG,MAClBnB,OAAQgB,EAAWI,aACnBlB,WAAYc,EAAWd,WACvBE,cAAeY,EAAWZ,cAC1BE,eAAgBU,EAAWV,eAC3BE,YAAaQ,EAAWR,YACxBtB,kBAIF6C,EAAW,IADGE,EAAAA,EAAYC,UAAUF,EAEtC,MAAO,GAAa,YAATzC,GAA+B,YAATA,EAAoB,CAGnD,MAAMyC,EAAS,CACbd,KAAMF,EAAWE,KACjBC,MAAOH,EAAWG,MAClBnB,OAAQgB,EAAWI,aACnBlB,WAAYc,EAAWd,WACvBE,cAAeY,EAAWZ,cAC1BE,eAAgBU,EAAWV,eAC3BE,YAAaQ,EAAWR,YACxBa,aAAcL,EAAWK,cAG3BU,EAAW,IADGE,EAAAA,EAAYC,UAAUF,EAEtC,CACAG,QAAQC,IAAIL,GACZD,QAAiBO,EAAAA,EAAYC,gBAAgBP,GACzCD,IAAiC,IAArBA,EAASS,SACvBvD,EAAgB8C,EAAS/C,cACzBwC,EAAaiB,KAAKC,KAAKX,EAASY,WAAa1B,EAAWG,UAExDW,GACqB,MAApBA,EAAS9B,QAAsC,MAApB8B,EAAS9B,QAErCR,EAAS,cAAe,CACtBJ,MAAO,CAAEY,OAAQ8B,EAAS9B,OAAQ2C,OAAQb,EAASa,SAGzD,EAqEAC,EAAAA,EAAAA,YAAU,KACJrD,GACFsC,IACF,GACC,CAACb,KACJ4B,EAAAA,EAAAA,YAAU,KACJrD,GAAiB,YAATA,GAAsBL,EA5BpC0C,eAAgCiB,GAC9BV,QAAQC,IAAI,eACZ,MAAMN,QAAiBgB,EAAAA,EAAWC,eAAeF,GAEjD,GADAV,QAAQC,IAAI,YACRN,IAAiC,IAArBA,EAASS,QAAkB,CACzCJ,QAAQC,IAAI,WACZ,MAAMY,EAAUlB,EAASmB,YAAYC,KAAKC,IAAO,CAC/CC,MAAOD,EAAQE,IACfC,MAAOH,EAAQI,UAEjBP,EAAQQ,QAAQ,CAAEJ,MAAO,GAAIE,MAAO,kBACpC3C,EAAkBqC,EACpB,MACElB,GACqB,MAApBA,EAAS9B,QAAsC,MAApB8B,EAAS9B,QAErCR,EAAS,cAAe,CACtBJ,MAAO,CAAEY,OAAQ8B,EAAS9B,OAAQ2C,OAAQb,EAASa,SAGzD,CASIc,CAAiBvE,IACRK,GAAkB,YAATA,GAA+B,YAATA,IArD5CqC,iBACEO,QAAQC,IAAI,eACZ,MAAMN,QAAiBgB,EAAAA,EAAWY,oBAElC,GADAvB,QAAQC,IAAI,YACRN,IAAiC,IAArBA,EAASS,QAAkB,CACzCJ,QAAQC,IAAI,WACZ,MAAMY,EAAUlB,EAASmB,YAAYC,KAAKC,IAAO,CAC/CC,MAAOD,EAAQE,IACfC,MAAOH,EAAQI,UAEjBP,EAAQQ,QAAQ,CAAEJ,MAAO,GAAIE,MAAO,kBACpC3C,EAAkBqC,EACpB,MACElB,GACqB,MAApBA,EAAS9B,QAAsC,MAApB8B,EAAS9B,QAErCR,EAAS,cAAe,CACtBJ,MAAO,CAAEY,OAAQ8B,EAAS9B,OAAQ2C,OAAQb,EAASa,SAGzD,CAkCIgB,GA5EJ/B,iBACEO,QAAQC,IAAI,OACZ,MAAMN,QAAiB8B,EAAAA,EAAQC,sBAE/B,GADA1B,QAAQC,IAAI,YACRN,IAAiC,IAArBA,EAASS,QAAkB,CACzCJ,QAAQC,IAAI,WACZ,MAAMY,EAAUlB,EAASgC,iBAAiBZ,KAAKa,IAAG,CAChDX,MAAOW,EAAIV,IACXC,MAAOS,EAAIjD,qBAEbkC,EAAQQ,QAAQ,CAAEJ,MAAO,GAAIE,MAAO,sBACpCzC,EAAuBmC,EACzB,MACElB,GACqB,MAApBA,EAAS9B,QAAsC,MAApB8B,EAAS9B,QAErCR,EAAS,cAAe,CACtBJ,MAAO,CAAEY,OAAQ8B,EAAS9B,OAAQ2C,OAAQb,EAASa,SAGzD,CAyDIqB,GACF,GACC,CAAC9E,IACJ,MAIM+E,GAAmBA,KACvBtE,GAAe,EAAM,EA+EvB,OACEuE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,SAAS,sBAAqBC,SAAA,EAClCH,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAACC,UAAU,0FAAyFF,SAAA,EACtGH,EAAAA,EAAAA,MAACM,EAAAA,EAAG,CAACD,UAAU,yDAAwDF,SAAA,CACpE9E,IAAkB,YAATA,GAA+B,YAATA,KAC9BkF,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRtB,MAAOtC,EACP6D,KAAK,SACL9B,GAAG,mBACH+B,KAAK,mBACLC,WAAW,WACXN,UAAU,gCACVO,SAAWC,IACThE,EAAoBgE,EAAEC,OAAO5B,OAC7BnC,GAAegE,IAAI,IACdA,EACH5D,aAAc0D,EAAEC,OAAO5B,SACtB,EAELJ,QAASpC,KAGb6D,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRtB,MAAO5C,EACPmE,KAAK,SACL9B,GAAG,cACH+B,KAAK,cACLC,WAAW,WACXN,UAAU,gCACVO,SAAWC,IACTtE,EAAesE,EAAEC,OAAO5B,OACxBnC,GAAegE,IAAI,IACdA,EACHzE,YAAauE,EAAEC,OAAO5B,SACrB,EAEL8B,YAAY,iCACZlC,QAAStC,KAEX+D,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRtB,MAAOpD,EACP2E,KAAK,SACL9B,GAAG,SACH+B,KAAK,SACLC,WAAW,WACXN,UAAU,gCACVO,SAAWC,IACT9E,EAAU8E,EAAEC,OAAO5B,OACnBnC,GAAegE,IAAI,IACdA,EACH7D,aAAc2D,EAAEC,OAAO5B,SACtB,EAELJ,QAAS,CACP,CAAEI,MAAO,GAAIE,MAAO,sBACpB,CAAEF,MAAO,UAAWE,MAAO,uBAC3B,CAAEF,MAAO,UAAWE,MAAO,wBAC3B,CAAEF,MAAO,SAAUE,MAAO,yBAI9BmB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRtB,MAAOlD,EACPyE,KAAK,OACL9B,GAAG,aACH+B,KAAK,aACLC,WAAW,WACXN,UAAU,6BACVO,SAAWC,IACT,MAAMI,EAAeJ,EAAEC,OAAO5B,MACxBgC,EAAgBC,IAAOF,GAAcG,OAAO,cAClDnF,EAAcgF,GACdlE,GAAegE,IAAI,IACdA,EACH/E,WAAYkF,KACX,KAIPX,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRtB,MAAO9C,EACPqE,KAAK,SACL9B,GAAG,iBACH+B,KAAK,iBACLC,WAAW,WACXN,UAAU,6BACVO,SAAWC,IACTxE,EAAkBwE,EAAEC,OAAO5B,OAC3BnC,GAAegE,IAAI,IACdA,EACH3E,eAAgByE,EAAEC,OAAO5B,SACxB,EAELJ,QAAS,CACP,CAAEI,MAAO,GAAIE,MAAO,mBACpB,CAAEF,MAAO,QAASE,MAAO,aACzB,CAAEF,MAAO,UAAWE,MAAO,mBAC3B,CAAEF,MAAO,OAAQE,MAAO,kBAK9BmB,EAAAA,EAAAA,KAACD,EAAAA,EAAG,CAACD,UAAU,oEAAmEF,UAChFH,EAAAA,EAAAA,MAAA,OAAKK,UAAU,yBAAwBF,SAAA,EACrCI,EAAAA,EAAAA,KAACc,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAmBlB,UAAU,iBACpDE,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRtB,MAAOhD,EACPuE,KAAK,OACL9B,GAAG,gBACH+B,KAAK,gBACLL,UAAU,eACVW,YAAY,mBACZJ,SAAWC,IACT1E,EAAiB0E,EAAEC,OAAO5B,OAC1BnC,GAAegE,IAAI,IACdA,EACH7E,cAAe2E,EAAEC,OAAO5B,SACvB,YAMZ7D,GAAiB,YAATA,IACPkF,EAAAA,EAAAA,KAACiB,EAAAA,EAAc,CACbnC,MAAM,+BACNoB,KAAK,WACLgB,OAAQ5G,EACR6G,cAxIYC,CAAClB,EAAMmB,EAAKtE,EAAYE,KAC1C7B,EAAU8E,GACV5E,EAAe+F,GACfnG,GAAe,GACf8B,EAAcD,GACdG,EAAcD,EAAW,EAoInBqE,OArNiBlD,IACvBlD,GAAe,EAAK,EAqNd4E,UAAU,gBACVzE,YAAaA,EACbP,KAAK,YAGRA,IAAkB,YAATA,GAA+B,YAATA,KAC9BkF,EAAAA,EAAAA,KAACiB,EAAAA,EAAc,CACbnC,MAAM,+BACNoB,KAAK,WACLgB,OAAQ5G,EACRwF,UAAU,gBACVzE,YAAaA,EACbP,KAAMA,KAGVkF,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CACThF,WAAYA,EACZiF,kBA/NoBC,IACxBjF,GAAegE,IAAI,IAAWA,EAAM/D,KAAMgF,KAAW,EA+NjD5E,UAAWA,KAGbmD,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAAAD,UACFI,EAAAA,EAAAA,KAAC0B,EAAAA,EAAa,CAACC,OAAQ1G,EAAa2G,QAASpC,GAAiBI,UAC5DI,EAAAA,EAAAA,KAAC6B,EAAAA,EAAW,CACV1G,OAAQA,EACR4B,WAAYA,GAAc,GAC1BE,WAAYA,GAAc,GAC1B2E,QAASpC,GACTnE,YAAaA,EACbyG,cAxOgB3E,MAAO4E,EAAa5G,KAG5C,MAAMkC,QAAiBO,EAAAA,EAAYoE,eAAe,CAChDC,YAAaF,EACb5G,WAGEkC,IAAiC,IAArBA,EAASS,SACvBoE,OAAOC,MAAM,sCACb/E,MACSC,GAAgC,MAApBA,EAAS9B,OAC9B2G,OAAOC,MAAM9E,EAASa,SAEtBb,GACqB,MAApBA,EAAS9B,QAAsC,MAApB8B,EAAS9B,QAErCR,EAAS,cAAe,CACtBJ,MAAO,CAAEY,OAAQ8B,EAAS9B,OAAQ2C,OAAQb,EAASa,UAGvDR,QAAQC,IAAI,8BAAoBoE,EAAY,EAoNpCK,aAjNejF,MAAO4E,EAAa5G,EAAQkH,KAGnD,MAAMhF,QAAiBO,EAAAA,EAAYoE,eAAe,CAChDC,YAAaF,EACb5G,SACAkH,uBAGEhF,IAAiC,IAArBA,EAASS,SACvBoE,OAAOC,MAAM,uCACb/E,OAEAC,GACqB,MAApBA,EAAS9B,QAAsC,MAApB8B,EAAS9B,QAErCR,EAAS,cAAe,CACtBJ,MAAO,CAAEY,OAAQ8B,EAAS9B,OAAQ2C,OAAQb,EAASa,UAGvDR,QAAQC,IAAI,+BAAmBoE,EAAY,EA8LnCO,UA5LYnF,MAAO4E,EAAa5G,EAAQoH,KAChD,MAAMlF,QAAiBO,EAAAA,EAAYoE,eAAe,CAChDC,YAAaF,EACb5G,SACAoH,UAEElF,IAAiC,IAArBA,EAASS,SACvBoE,OAAOC,MAAM,0CACb/E,OAEAC,GACqB,MAApBA,EAAS9B,QAAsC,MAApB8B,EAAS9B,QAErCR,EAAS,cAAe,CACtBJ,MAAO,CAAEY,OAAQ8B,EAAS9B,OAAQ2C,OAAQb,EAASa,UAGvDR,QAAQC,IAAI,mCAAsBoE,EAAY,UA+KvC,C,uDC1aX,SAASS,EAAUC,GACjB,MAAM,UAAEC,EAAS,kBAAElB,EAAiB,WAAEjF,GAAekG,GAE/C,KAAEhG,GAASF,EAYjB,OAFAmB,QAAQC,IAAI+E,IAGV1C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASF,SACrB8C,GACCA,EAAUjE,KAAKE,IACbqB,EAAAA,EAAAA,KAAA,MACEF,UACEnB,IAAUgE,SAASlG,GAAQ,oBAAsB,YAGnDmG,QAASA,IAnBEjE,KACd6C,GAILA,EAAkB7C,EAAM,EAcDkE,CAAYlE,GAAOiB,UAElCI,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWF,SAAEjB,KAHrBA,MAQjB,CArCA6D,EAAUM,aAAe,CACvBJ,UAAW,KACXlB,kBAAmB,KACnBjF,WAAY,CAAC,GAoCf,UChCA,SAASgF,EAAWkB,GAClB,MAAM,WAAElG,EAAU,kBAAEiF,EAAiB,UAAE3E,GAAc4F,EACrD/E,QAAQC,IAAId,GACZ,MAAM,KAAEJ,GAASF,EAEjB,IAAImG,EAAY,GAGhB,IAAK,IAAIK,EAAI,EAAGA,GAAKlG,EAAWkG,IAC9BL,EAAUM,KAAKD,GAqBjB,OACEtD,EAAAA,EAAAA,MAAA,OAAK,aAAW,0BAA0BK,UAAU,OAAMF,SAAA,EACxDH,EAAAA,EAAAA,MAAA,MAAIK,UAAU,2DAA0DF,SAAA,EACtEI,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWF,UACvBI,EAAAA,EAAAA,KAAA,UACEF,UAAU,YACV8C,QAASA,IAxBCjE,KAClB,IAAK6C,EACH,OAGF,MAAMC,EAAUkB,SAAShE,GAAS,EAClC6C,EAAkBC,EAAQ,EAkBHwB,CAAWxG,GAC1ByG,SAAUzG,GAAQ,EAAEmD,UAEpBI,EAAAA,EAAAA,KAAA,QAAAJ,SAAM,cAGVI,EAAAA,EAAAA,KAACwC,EAAS,CACRE,UAAWA,EACXlB,kBAAmBA,EACnBjF,WAAYA,KAEdyD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWF,UACvBI,EAAAA,EAAAA,KAAA,UACEF,UAAU,YACV8C,QAASA,IA7BDjE,KAChB,IAAK6C,EACH,OAGF,MAAMC,EAAUkB,SAAShE,GAAS,EAClC6C,EAAkBC,EAAQ,EAuBH0B,CAAS1G,GACxByG,SAAUzG,GAAQI,EAAU+C,UAE5BI,EAAAA,EAAAA,KAAA,QAAAJ,SAAM,iBAIZI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2DAA0DF,UACvEH,EAAAA,EAAAA,MAAA,KAAGK,UAAU,6BAA4BF,SAAA,CAAC,wBACD,GAAtB+C,SAAS9F,GAAgB,kBAKpD,CAtEA0E,EAAWuB,aAAe,CACxBvG,WAAY,CAAC,EACbiF,kBAAmB,KACnB3E,UAAW,MAqEb,S,gDChFA,MAwBA,EAxBoB,CAClBuG,mBAAoBA,CAACC,EAAWC,KAC9B,MAAMC,EAAM,aAAaF,WACzB,OAAOG,EAAAA,EAAYC,KAAKF,EAAKD,EAAK,EAGpCzF,gBAAkB6F,IAChB,MAAMH,EAAM,2BAA2BG,IACvC,OAAOF,EAAAA,EAAYG,IAAIJ,EAAI,EAE7BvB,eAAiBsB,GAERE,EAAAA,EAAYI,IADP,mBACgBN,GAE9B3G,aAAe+G,IACb,MAAMH,EAAM,kBAAkBG,IAC9B,OAAOF,EAAAA,EAAYC,KAAKF,EAAI,EAE9BM,mBAAqBzF,IACnB,MAAMmF,EAAM,uBAAuBnF,IACnC,OAAOoF,EAAAA,EAAYM,OAAOP,EAAI,E,gDCpBlC,MA0CA,EA1CmB,CACjBQ,gBAAkBT,GAETE,EAAAA,EAAYC,KADP,sBACiBH,GAE/BU,2BAA4BA,CAACX,EAAWK,KACtC,MAAMH,EAAM,aAAaF,cAAsBK,IAC/C,OAAOF,EAAAA,EAAYG,IAAIJ,EAAI,EAE7BU,kBAAmBA,CAACZ,EAAWK,KAC7B,MAAMH,EAAM,aAAaF,mBAA2BK,IACpD,OAAOF,EAAAA,EAAYG,IAAIJ,EAAI,EAE7BW,iBAAmBb,IACjB,MAAME,EAAM,aAAaF,IACzB,OAAOG,EAAAA,EAAYG,IAAIJ,EAAI,EAE7BY,2BAA6Bd,IAC3B,MAAME,EAAM,kBAAkBF,IAC9B,OAAOG,EAAAA,EAAYG,IAAIJ,EAAI,EAE7Ba,oBAAqBA,CAACf,EAAWC,KAC/B,MAAMC,EAAM,oBAAoBF,IAChC,OAAOG,EAAAA,EAAYC,KAAKF,EAAKD,EAAK,EAEpChF,eAAiB7D,IACf,MAAM8I,EAAM,mBAAmB9I,IAC/B,OAAO+I,EAAAA,EAAYG,IAAIJ,EAAI,EAE7BtE,kBAAmBA,IAEVuE,EAAAA,EAAYG,IADP,iBAGdU,kBAAmBA,IAEVb,EAAAA,EAAYG,IADP,oBAGdW,oBAAqBA,IAEZd,EAAAA,EAAYG,IADP,sB,sDCvChB,MAWA,EAXaY,IAAsD,IAArD,SAAE3E,EAAQ,SAAED,EAAQ,UAAE6E,EAAS,aAAEC,GAAcF,EAC3D,OACE9E,EAAAA,EAAAA,MAAA,OAAKK,UAAW,sBAAsBH,IAAWC,SAAA,EAC/CI,EAAAA,EAAAA,KAAA,MAAAJ,SAAK4E,IACJC,IACChF,EAAAA,EAAAA,MAAA,KAAGiF,MAAO,CAAEC,MAAO,MAAOC,SAAU,QAAShF,SAAA,CAAC,IAAE6E,KAEjD7E,IACG,C","sources":["admin layout/Donation Management/DonationManagement.js","admin layout/Manage Users/IndexPage.jsx","admin layout/Manage Users/Pagination.jsx","API/DonationAPI.jsx","API/ProjectAPI.jsx","Shared/Card.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport RecentProjects from \"../Dashboard/components/RecentProjects\";\nimport Card from \"../../Shared/Card\";\nimport DonationAPI from \"../../API/DonationAPI\";\nimport ProjectAPI from \"../../API/ProjectAPI\";\nimport UserAPI from \"../../API/UserAPI\";\nimport DonationModal from \"../Donation Management/Donation Modal/DonationModal\";\nimport ConfirmForm from \"./Donation Modal/ConfirmForm\";\nimport { useSelector } from \"react-redux\";\nimport FormGroup from \"../../FormGroup/FormGroup\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Pagination from \"../Manage Users/Pagination\";\nimport queryString from \"query-string\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./DonationManagement.css\"; // Import the new CSS file\nimport moment from \"moment\";\nconst DonationManagement = () => {\n  const [donationList, setDonationList] = useState();\n  const organizationId = useSelector((state) => state.user.idUser);\n  const role = useSelector((state) => state.user.role);\n  const navigate = useNavigate();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [action, setAction] = useState(\"\");\n  const [selectedIDs, setSelectedIDs] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [searchDate, setSearchDate] = useState(\"\");\n  const [searchContent, setSearchContent] = useState(\"\");\n  const [typeOfDonation, setTypeOfDonation] = useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [projectOptions, setProjectOptions] = useState([]); // Danh sách dự án\n  const [organizationOptions, setOrganizationOptions] = useState([]);\n  const [organizationName, setOrganizationName] = useState(\"\");\n  const [pagination, setPagination] = useState(\n    role && role === \"partner\"\n      ? {\n          page: 1,\n          count: 20,\n          searchStatus: \"\",\n          projectName: \"\",\n          searchDate: \"\",\n          searchContent: \"\",\n          typeOfDonation: \"\",\n        }\n      : {\n          page: 1,\n          count: 20,\n          searchStatus: \"\",\n          projectName: \"\",\n          searchDate: \"\",\n          searchContent: \"\",\n          typeOfDonation: \"\",\n          organization: \"\",\n        }\n  );\n\n  const [totalPage, setTotalPage] = useState(0);\n  const [registered, setRegistered] = useState(null);\n  const [typeOfDona, setTypeOfDona] = useState(null);\n\n  // tải danh sách theo mặc định mới nhất\n  async function fetchDonationList() {\n    let response;\n    let newQuery;\n    if (role === \"partner\") {\n      //  trang dành cho partner thì cố định organizationId\n      const params = {\n        page: pagination.page,\n        count: pagination.count,\n        status: pagination.searchStatus,\n        searchDate: pagination.searchDate,\n        searchContent: pagination.searchContent,\n        typeOfDonation: pagination.typeOfDonation,\n        projectName: pagination.projectName,\n        organizationId,\n      };\n\n      const query = queryString.stringify(params);\n      newQuery = \"?\" + query;\n    } else if (role === \"admin 1\" || role === \"admin 2\") {\n      //trang dành cho admin thì  organization để\n      // khi tên của tổ chức thay đổi thì organizaiton trong pagination cũng thay đổi\n      const params = {\n        page: pagination.page,\n        count: pagination.count,\n        status: pagination.searchStatus,\n        searchDate: pagination.searchDate,\n        searchContent: pagination.searchContent,\n        typeOfDonation: pagination.typeOfDonation,\n        projectName: pagination.projectName,\n        organization: pagination.organization,\n      };\n      const query = queryString.stringify(params);\n      newQuery = \"?\" + query;\n    }\n    console.log(newQuery);\n    response = await DonationAPI.getDonationList(newQuery);\n    if (response && response.success === true) {\n      setDonationList(response.donationList);\n      setTotalPage(Math.ceil(response.totalCount / pagination.count));\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n  }\n  // tải danh sách các tổ chức\n  async function fetchOrganizationList() {\n    console.log(\"org\");\n    const response = await UserAPI.getOrganizationList();\n    console.log(\"response\");\n    if (response && response.success === true) {\n      console.log(\"success\");\n      const options = response.organizationList.map((org) => ({\n        value: org._id,\n        label: org.organizationName,\n      }));\n      options.unshift({ value: \"\", label: \"Tổ chức\" });\n      setOrganizationOptions(options);\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n  }\n  // tải danh sách tất cả các dự án\n  async function fetchAllProjectList() {\n    console.log(\"projectlist\");\n    const response = await ProjectAPI.getAllProjectList();\n    console.log(\"response\");\n    if (response && response.success === true) {\n      console.log(\"success\");\n      const options = response.projectList.map((project) => ({\n        value: project._id,\n        label: project.title,\n      }));\n      options.unshift({ value: \"\", label: \"Dự án\" });\n      setProjectOptions(options);\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n  }\n\n  // tải danh sách project thuộc tổ chức cụ thể theo id\n  async function fetchProjectList(id) {\n    console.log(\"projectlist\");\n    const response = await ProjectAPI.getProjectList(id);\n    console.log(\"response\");\n    if (response && response.success === true) {\n      console.log(\"success\");\n      const options = response.projectList.map((project) => ({\n        value: project._id,\n        label: project.title,\n      }));\n      options.unshift({ value: \"\", label: \"Dự án\" });\n      setProjectOptions(options);\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (role) {\n      fetchDonationList();\n    }\n  }, [pagination]);\n  useEffect(() => {\n    if (role && role === \"partner\" && organizationId) {\n      fetchProjectList(organizationId);\n    } else if (role && (role === \"admin 1\" || role === \"admin 2\")) {\n      fetchAllProjectList();\n      fetchOrganizationList();\n    }\n  }, [organizationId]);\n  const handleOpenModal = (id) => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handlePageChange = (newPage) => {\n    setPagination((prev) => ({ ...prev, page: newPage }));\n  };\n  const handleBulkConfirm = async (selectedIds, action) => {\n    // Gọi API xác nhận hàng loạt với selectedIds\n\n    const response = await DonationAPI.updateDonation({\n      donationIds: selectedIds,\n      action,\n    });\n\n    if (response && response.success === true) {\n      window.alert(\"Xác nhận thành công!\");\n      fetchDonationList(organizationId);\n    } else if (response && response.status === 400) {\n      window.alert(response.errors);\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n    console.log(\"Xác nhận các ID:\", selectedIds);\n  };\n\n  const handleBulkReject = async (selectedIds, action, reasonForRejection) => {\n    // Gọi API từ chối hàng loạt với selectedIds\n\n    const response = await DonationAPI.updateDonation({\n      donationIds: selectedIds,\n      action,\n      reasonForRejection,\n    });\n\n    if (response && response.success === true) {\n      window.alert(\"Từ chối thành công!\");\n      fetchDonationList(organizationId);\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n    console.log(\"Từ chối các ID:\", selectedIds);\n  };\n  const handleCorrect = async (selectedIds, action, exact) => {\n    const response = await DonationAPI.updateDonation({\n      donationIds: selectedIds,\n      action,\n      exact,\n    });\n    if (response && response.success === true) {\n      window.alert(\"Đính chính thành công\");\n      fetchDonationList(organizationId);\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      navigate(\"/error-page\", {\n        state: { status: response.status, errors: response.errors },\n      });\n    }\n    console.log(\"Đính chính các ID:\", selectedIds);\n  };\n  const actionClick = (type, ids, registered, typeOfDona) => {\n    setAction(type);\n    setSelectedIDs(ids);\n    setIsModalOpen(true);\n    setRegistered(registered);\n    setTypeOfDona(typeOfDona);\n  };\n\n  return (\n    <Card formName=\"donation-management\">\n      <Row className=\"filter-container justify-content-sm-start justify-content-md-between align-items-center\">\n        <Col className=\"filter-options row justify-content-start mb-0 col-auto\">\n          {role && (role === \"admin 1\" || role === \"admin 2\") && (\n            <FormGroup\n              value={organizationName}\n              type=\"select\"\n              id=\"organizationName\"\n              name=\"organizationName\"\n              sharedName=\"col-auto\"\n              className=\"filter-control search-project\"\n              onChange={(e) => {\n                setOrganizationName(e.target.value);\n                setPagination((prev) => ({\n                  ...prev,\n                  organization: e.target.value,\n                }));\n              }}\n              options={organizationOptions}\n            />\n          )}\n          <FormGroup\n            value={projectName}\n            type=\"select\"\n            id=\"projectName\"\n            name=\"projectName\"\n            sharedName=\"col-auto\"\n            className=\"filter-control search-project\"\n            onChange={(e) => {\n              setProjectName(e.target.value);\n              setPagination((prev) => ({\n                ...prev,\n                projectName: e.target.value,\n              }));\n            }}\n            placeholder=\"Tìm kiếm dự án\"\n            options={projectOptions}\n          />\n          <FormGroup\n            value={status}\n            type=\"select\"\n            id=\"status\"\n            name=\"status\"\n            sharedName=\"col-auto\"\n            className=\"filter-control search-status \"\n            onChange={(e) => {\n              setStatus(e.target.value);\n              setPagination((prev) => ({\n                ...prev,\n                searchStatus: e.target.value,\n              }));\n            }}\n            options={[\n              { value: \"\", label: \"Trạng thái\" },\n              { value: \"pending\", label: \"Chờ duyệt\" },\n              { value: \"confirm\", label: \"Đã nhận\" },\n              { value: \"reject\", label: \"Từ chối\" },\n            ]}\n          />\n\n          <FormGroup\n            value={searchDate}\n            type=\"date\"\n            id=\"searchDate\"\n            name=\"searchDate\"\n            sharedName=\"col-auto\"\n            className=\"filter-control search-date\"\n            onChange={(e) => {\n              const selectedDate = e.target.value;\n              const formattedDate = moment(selectedDate).format(\"YYYY-MM-DD\"); // Định dạng lại ngày tháng\n              setSearchDate(selectedDate);\n              setPagination((prev) => ({\n                ...prev,\n                searchDate: formattedDate,\n              }));\n            }}\n          />\n\n          <FormGroup\n            value={typeOfDonation}\n            type=\"select\"\n            id=\"typeOfDonation\"\n            name=\"typeOfDonation\"\n            sharedName=\"col-auto\"\n            className=\"filter-control search-type\"\n            onChange={(e) => {\n              setTypeOfDonation(e.target.value);\n              setPagination((prev) => ({\n                ...prev,\n                typeOfDonation: e.target.value,\n              }));\n            }}\n            options={[\n              { value: \"\", label: \"Quyên góp\" },\n              { value: \"money\", label: \"Tiền\" },\n              { value: \"clothes\", label: \"Quần áo\" },\n              { value: \"book\", label: \"Sách\" },\n            ]}\n          />\n        </Col>\n\n        <Col className=\"search-bar justify-content-xl-end justify-content-start col-auto \">\n          <div className=\"search-input-container\">\n            <FontAwesomeIcon icon={faMagnifyingGlass} className=\"search-icon\" />\n            <FormGroup\n              value={searchContent}\n              type=\"text\"\n              id=\"searchContent\"\n              name=\"searchContent\"\n              className=\"search-input\"\n              placeholder=\"Tìm kiếm\"\n              onChange={(e) => {\n                setSearchContent(e.target.value);\n                setPagination((prev) => ({\n                  ...prev,\n                  searchContent: e.target.value,\n                }));\n              }}\n            />\n          </div>\n        </Col>\n      </Row>\n      {role && role === \"partner\" && (\n        <RecentProjects\n          title=\"DANH SÁCH QUYÊN GÓP\"\n          type=\"donation\"\n          detail={donationList}\n          actionHandler={actionClick}\n          onOpen={handleOpenModal}\n          className=\"donation-list\"\n          selectedIDs={selectedIDs}\n          role=\"partner\"\n        />\n      )}\n      {role && (role === \"admin 1\" || role === \"admin 2\") && (\n        <RecentProjects\n          title=\"DANH SÁCH QUYÊN GÓP\"\n          type=\"donation\"\n          detail={donationList}\n          className=\"donation-list\"\n          selectedIDs={selectedIDs}\n          role={role}\n        />\n      )}\n      <Pagination\n        pagination={pagination}\n        handlerChangePage={handlePageChange}\n        totalPage={totalPage}\n      />\n\n      <Row>\n        <DonationModal isOpen={isModalOpen} onClose={handleCloseModal}>\n          <ConfirmForm\n            action={action}\n            registered={registered || \"\"}\n            typeOfDona={typeOfDona || \"\"}\n            onClose={handleCloseModal}\n            selectedIDs={selectedIDs}\n            onBulkConfirm={handleBulkConfirm}\n            onBulkReject={handleBulkReject}\n            onCorrect={handleCorrect}\n          />\n        </DonationModal>\n      </Row>\n    </Card>\n  );\n};\n\nexport default DonationManagement;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nIndexPage.propTypes = {\n  indexPage: PropTypes.array,\n  handlerChangePage: PropTypes.func,\n  pagination: PropTypes.object,\n};\n\nIndexPage.defaultProps = {\n  indexPage: null,\n  handlerChangePage: null,\n  pagination: {},\n};\n\nfunction IndexPage(props) {\n  const { indexPage, handlerChangePage, pagination } = props;\n\n  const { page } = pagination;\n\n  const onIndexPage = (value) => {\n    if (!handlerChangePage) {\n      return;\n    }\n\n    handlerChangePage(value);\n  };\n\n  console.log(indexPage);\n\n  return (\n    <div className=\"d-flex \">\n      {indexPage &&\n        indexPage.map((value) => (\n          <li\n            className={\n              value === parseInt(page) ? \"page-item active \" : \"page-item\"\n            }\n            key={value}\n            onClick={() => onIndexPage(value)}\n          >\n            <a className=\"page-link\">{value}</a>\n          </li>\n        ))}\n    </div>\n  );\n}\n\nexport default IndexPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IndexPage from \"./IndexPage\";\n\nPagination.propTypes = {\n  pagination: PropTypes.object,\n  handlerChangePage: PropTypes.func,\n  totalPage: PropTypes.number,\n};\n\nPagination.defaultProps = {\n  pagination: {},\n  handlerChangePage: null,\n  totalPage: null,\n};\n\nfunction Pagination(props) {\n  const { pagination, handlerChangePage, totalPage } = props;\n  console.log(totalPage);\n  const { page } = pagination;\n\n  let indexPage = [];\n\n  //Tạo ra số nút bấm cho từng trang\n  for (var i = 1; i <= totalPage; i++) {\n    indexPage.push(i);\n  }\n\n  const onDownPage = (value) => {\n    if (!handlerChangePage) {\n      return;\n    }\n\n    const newPage = parseInt(value) - 1;\n    handlerChangePage(newPage);\n  };\n\n  const onUpPage = (value) => {\n    if (!handlerChangePage) {\n      return;\n    }\n\n    const newPage = parseInt(value) + 1;\n    handlerChangePage(newPage);\n  };\n\n  return (\n    <nav aria-label=\"Page navigation example\" className=\"pt-5\">\n      <ul className=\"pagination justify-content-center justify-content-lg-end\">\n        <li className=\"page-item\">\n          <button\n            className=\"page-link\"\n            onClick={() => onDownPage(page)}\n            disabled={page <= 1}\n          >\n            <span>«</span>\n          </button>\n        </li>\n        <IndexPage\n          indexPage={indexPage}\n          handlerChangePage={handlerChangePage}\n          pagination={pagination}\n        />\n        <li className=\"page-item\">\n          <button\n            className=\"page-link\"\n            onClick={() => onUpPage(page)}\n            disabled={page >= totalPage}\n          >\n            <span>»</span>\n          </button>\n        </li>\n      </ul>\n      <div className=\"pagination justify-content-center justify-content-lg-end\">\n        <p className=\"text-small text-muted mb-0\">\n          Showing 1–10 of {parseInt(totalPage) * 10} results\n        </p>\n      </div>\n    </nav>\n  );\n}\n\nexport default Pagination;\n","import axiosClient from \"./axiosClient\";\n\nconst DonationAPI = {\n  submitDonationInfo: (projectId, body) => {\n    const url = `/projects/${projectId}/donate`;\n    return axiosClient.post(url, body);\n  },\n\n  getDonationList: (query) => {\n    const url = `/admin/get/all-donation/${query}`;\n    return axiosClient.get(url);\n  },\n  updateDonation: (body) => {\n    const url = `/admin/donations`;\n    return axiosClient.put(url, body);\n  },\n  searchStatus: (query) => {\n    const url = `/admin/donation${query}`;\n    return axiosClient.post(url);\n  },\n  deleteDonationInfo: (id) => {\n    const url = `/projects/donations/${id}`;\n    return axiosClient.delete(url);\n  },\n};\n\nexport default DonationAPI;\n","import axiosClient from \"./axiosClient\";\n\nconst ProjectAPI = {\n  postProjectForm: (body) => {\n    const url = \"/admin/project-form\";\n    return axiosClient.post(url, body);\n  },\n  getDonationListByProjectId: (projectId, query) => {\n    const url = `/projects/${projectId}/donations${query}`;\n    return axiosClient.get(url);\n  },\n  getDonationByName: (projectId, query) => {\n    const url = `/projects/${projectId}/donationByName${query}`;\n    return axiosClient.get(url);\n  },\n  getProjectDetail: (projectId) => {\n    const url = `/projects/${projectId}`;\n    return axiosClient.get(url);\n  },\n  getProjectDetailFormToEdit: (projectId) => {\n    const url = `/projects/edit/${projectId}`;\n    return axiosClient.get(url);\n  },\n  updateProjectDetail: (projectId, body) => {\n    const url = `/projects/update/${projectId}`;\n    return axiosClient.post(url, body);\n  },\n  getProjectList: (organizationId) => {\n    const url = `/admin/projects/${organizationId}`;\n    return axiosClient.get(url);\n  },\n  getAllProjectList: () => {\n    const url = \"/projects/all\";\n    return axiosClient.get(url);\n  },\n  getActiveProjects: () => {\n    const url = \"/projects/active\";\n    return axiosClient.get(url);\n  },\n  getInactiveProjects: () => {\n    const url = \"/projects/inactive\";\n    return axiosClient.get(url);\n  },\n};\nexport default ProjectAPI;\n","import \"./card.css\";\nconst Card = ({ children, formName, formTitle, errorMessage }) => {\n  return (\n    <div className={`container-md  card ${formName}`}>\n      <h5>{formTitle}</h5>\n      {errorMessage && (\n        <p style={{ color: \"red\", fontSize: \"12px\" }}>*{errorMessage}</p>\n      )}\n      {children}\n    </div>\n  );\n};\nexport default Card;\n"],"names":["DonationManagement","donationList","setDonationList","useState","organizationId","useSelector","state","user","idUser","role","navigate","useNavigate","isModalOpen","setIsModalOpen","action","setAction","selectedIDs","setSelectedIDs","status","setStatus","searchDate","setSearchDate","searchContent","setSearchContent","typeOfDonation","setTypeOfDonation","projectName","setProjectName","projectOptions","setProjectOptions","organizationOptions","setOrganizationOptions","organizationName","setOrganizationName","pagination","setPagination","page","count","searchStatus","organization","totalPage","setTotalPage","registered","setRegistered","typeOfDona","setTypeOfDona","async","fetchDonationList","response","newQuery","params","queryString","stringify","console","log","DonationAPI","getDonationList","success","Math","ceil","totalCount","errors","useEffect","id","ProjectAPI","getProjectList","options","projectList","map","project","value","_id","label","title","unshift","fetchProjectList","getAllProjectList","fetchAllProjectList","UserAPI","getOrganizationList","organizationList","org","fetchOrganizationList","handleCloseModal","_jsxs","Card","formName","children","Row","className","Col","_jsx","FormGroup","type","name","sharedName","onChange","e","target","prev","placeholder","selectedDate","formattedDate","moment","format","FontAwesomeIcon","icon","faMagnifyingGlass","RecentProjects","detail","actionHandler","actionClick","ids","onOpen","Pagination","handlerChangePage","newPage","DonationModal","isOpen","onClose","ConfirmForm","onBulkConfirm","selectedIds","updateDonation","donationIds","window","alert","onBulkReject","reasonForRejection","onCorrect","exact","IndexPage","props","indexPage","parseInt","onClick","onIndexPage","defaultProps","i","push","onDownPage","disabled","onUpPage","submitDonationInfo","projectId","body","url","axiosClient","post","query","get","put","deleteDonationInfo","delete","postProjectForm","getDonationListByProjectId","getDonationByName","getProjectDetail","getProjectDetailFormToEdit","updateProjectDetail","getActiveProjects","getInactiveProjects","_ref","formTitle","errorMessage","style","color","fontSize"],"sourceRoot":""}